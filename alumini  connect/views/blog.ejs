<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Include head partial for meta tags, styles, etc. -->
    <%- include('./partials/head') %>
    <style>
        body {
            background-color: #111; /* Dark background for the page */
            color: #fff; /* Light text for contrast */
            font-family: Arial, sans-serif;
        }

        /* Container to hold both the sidebar and content */
        .main-container {
            display: flex;
            min-height: 100vh;
        }

        /* Content area */
        .content {
            margin-left: 250px; /* To account for the side menu */
            padding: 20px;
            width: 100%;
        }

        .blog-detail {
            margin-top: 20px;
        }

        .blog-detail img {
            max-width: 100%;
            height: auto;
            object-fit: cover;
        }

        .blog-card {
            position: relative;
            margin-bottom: 20px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #333; /* Dark background for blog card */
            color: #fff; /* Light text */
        }

        .blog-card h2 {
            font-size: 2rem;
            margin: 20px 0;
        }

        .blog-card p {
            font-size: 1rem;
            color: #bbb; /* Lighter text for blog preview */
        }

        .comment-section {
            margin-top: 20px;
        }

        .comment-card {
            margin-bottom: 15px;
            padding: 10px;
            border-left: 4px solid #007bff;
            background: #444; /* Dark background for comments */
            border-radius: 5px;
        }

        .comment-content {
            margin-bottom: 5px;
        }

        .comment-meta {
            font-size: 0.9rem;
            color: #bbb;
        }

        .btn-primary {
            background-color: #007bff; /* Blue button */
            border: none;
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <!-- Include navigation partial -->
    <%- include('./partials/nav') %>

    <div class="main-container">
        <!-- Include the side menu from the partial -->
        <%- include('./partials/sidemenu') %>

        <!-- Content Area -->
        <div class="content">
            <!-- Display full blog content -->
            <div class="blog-detail">
                <h3><%= blog.title %></h3>
                <p><strong>By: </strong><%= blog.createdBy.fullname || "Anonymous" %></p>
                <p><strong>Published on: </strong><%= new Date(blog.createdAt).toDateString() %></p>
                <img src="<%= blog.coverImageURL %>" alt="<%= blog.title %>" class="img-fluid blog-image">
                <div class="blog-content mt-4">
                    <%= blog.body %> <!-- Full content of the blog -->
                </div>
            </div>

            <div class="container mt-5">
                <h1>Comments</h1>
                         
                <!-- Comments Section -->
                <% if (user) { %>
                    <form action="/blog/comment/<%= blog._id  %>" method="POST" class="mt-3">
                        <input type="hidden" name="blogId" value="<%= blog._id %>">
                        <input type="hidden" name="user_id" value="<%= user ? user._id : null %>">
                        <div class="mb-3">
                            <input 
                                type="text" 
                                class="form-control" 
                                name="content" 
                                placeholder="Enter your comment here" 
                                required>
                        </div>
                        <div class="generated-comments mt-5" style="background-color: '#111';">
                            
                            <div id="generated-comments-container">
                                <!-- This will be populated with generated comments -->
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Comment</button>
                    </form>
                <% } else { %>
                    <p class="text-muted mt-3">You must be logged in to add a comment.</p>
                <% } %>

                <!-- Existing Comments -->
                <h5>Comments: <%= comments.length %></h5>
                <div class="mt-4">

                    <% if (comments && comments.length > 0) { %>
                        <% comments.forEach(comment => { %>
                            <div class="comment-card">
                                <p class="comment-content">
                                    <strong><%= comment.createdBy.fullname || "Anonymous" %>:</strong> <%= comment.content %>
                                </p>
                                <p class="comment-meta">
                                    Posted on <%= new Date(comment.createdAt).toLocaleString() %>
                                </p>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <p>No comments yet. Be the first to comment!</p>
                    <% } %>
                </div>

                <!-- Generated Comments Section -->
               
            </div>
        </div>
    </div>

    <!-- Include scripts partial -->
    <%- include('./partials/scripts') %>

    <script>
        // Assuming you have access to the blog body in a variable
        const blogBody = `<%= blog.body %>`; // Use EJS to inject the blog body content
    
        //
// Function to fetch generated comments and handle comma-separated responses
async function fetchGeneratedComments() {
    try {
        const response = await fetch('/generate', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                prompt: `Generate only five 2-3 word comments separated by commas that make the blogger happy for the following blog content  some with emogi: "${blogBody}"`
            })
        });

        if (!response.ok) {
            throw new Error('Network response was not ok');
        }

        const data = await response.json();
        const commentsContainer = document.getElementById('generated-comments-container');

        // Clear previous comments
        commentsContainer.innerHTML = '';

        // Extract comma-separated comments
        if (data.response) {
            const comments = data.response.split(',').map(comment => comment.trim());

            // Display each comment as a clickable element
            comments.forEach((comment, index) => {
                const commentElement = document.createElement('span'); // Use 'span' for inline display
commentElement.className = 'comment-item';
commentElement.style.cursor = 'pointer';
commentElement.style.display = 'inline-block'; // Makes the span behave like a block but stay inline
commentElement.style.margin = '5px'; // Small margin for spacing
commentElement.style.padding = '5px 10px'; // Padding for better look
commentElement.style.border = '1px solid #ccc';
commentElement.style.borderRadius = '15px'; // Softer border radius for a clean look
commentElement.style.backgroundColor = '#d3d3d3'; // Light grey background
commentElement.style.color = '#000'; // Black text color
commentElement.style.fontWeight = '500'; // Medium font weight for better visibility
commentElement.style.whiteSpace = 'nowrap'; // Prevents wrapping of text
commentElement.textContent = comment;
                // Add the comment content
                commentElement.textContent = `${comment}`;

                // Add click event to populate the input field
                commentElement.addEventListener('click', () => {
                    document.querySelector('input[name="content"]').value = comment;
                });

                // Append the element to the container
                commentsContainer.appendChild(commentElement);
            });
        } else {
            commentsContainer.innerHTML = '<p>No comments generated.</p>';
        }
    } catch (error) {
        console.error('Error fetching comments:', error);
        const commentsContainer = document.getElementById('generated-comments-container');
        commentsContainer.innerHTML = '<p>Error fetching comments. Please try again later.</p>';
    }
}

// Call the function to fetch generated comments
fetchGeneratedComments();

    </script>
</body>